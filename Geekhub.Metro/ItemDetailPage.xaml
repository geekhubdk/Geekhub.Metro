<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Geekhub.Metro.ItemDetailPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    IsTabStop="false"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Geekhub.Metro"
    xmlns:data="using:Geekhub.Metro.Data"
    xmlns:common="using:Geekhub.Metro.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:bm="using:Bing.Maps"
    mc:Ignorable="d">

	<Page.Resources>

		<!-- Collection of items displayed by this page -->
		<CollectionViewSource
            x:Name="itemsViewSource"
            Source="{Binding Items}"
            d:Source="{Binding AllGroups[0].Items, Source={d:DesignInstance Type=data:MeetingDataSource, IsDesignTimeCreatable=True}}"/>
	</Page.Resources>

	<!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
	<Grid
        Style="{StaticResource LayoutRootStyle}"
        DataContext="{Binding Item}"
        d:DataContext="{Binding AllGroups[0].Items[0], Source={d:DesignInstance Type=data:MeetingDataSource, IsDesignTimeCreatable=True}}">

		<Grid.RowDefinitions>
			<RowDefinition Height="140"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>

		<!-- Back button and page title -->
		<Grid Background="{StaticResource ContainerGradient}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
			<TextBlock x:Name="pageTitle" Text="{Binding Title}" Style="{StaticResource PageHeaderTextStyle}" Grid.Column="1"/>
		</Grid>

		<!--
            The remainder of the page is one large FlipView that displays details for
            one item at a time, allowing the user to flip through all items in the chosen
            group
        -->
		<FlipView
            x:Name="flipView"
            AutomationProperties.AutomationId="ItemsFlipView"
            AutomationProperties.Name="Item Details"
            TabIndex="1"
            Grid.Row="1"
            Margin="0,-3,0,0"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}">

			<FlipView.ItemTemplate>
				<DataTemplate>

					<!--
                        UserControl chosen as the templated item because it supports visual state management
                        Loaded/unloaded events explicitly subscribe to view state updates from the page
                    -->
					<UserControl Loaded="StartLayoutUpdates" Unloaded="StopLayoutUpdates">
						<ScrollViewer x:Name="scrollViewer" VerticalScrollBarVisibility="Auto" Style="{StaticResource VerticalScrollViewerStyle}" Grid.Row="1">

							<Grid VerticalAlignment="Top">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<!-- Content is allowed to flow across as many columns as needed -->
								<common:RichTextColumns Grid.Column="0" x:Name="richTextColumns" Margin="117,0,117,47">
									<RichTextBlock x:Name="richTextBlock" Width="560" Style="{StaticResource ItemRichTextStyle}">
										<Paragraph LineStackingStrategy="MaxHeight">
											<InlineUIContainer>
												<TextBlock FontSize="20" LineHeight="20" TextWrapping="Wrap" FontWeight="Light" Text="{Binding LongDateTime}"/>
											</InlineUIContainer>
											<LineBreak/>
											<LineBreak/>
											<Run Text="{Binding Subtitle}"/>
											<LineBreak/>
										</Paragraph>
										<Paragraph>
											<Run FontFamily="Calibri"  FontSize="13" Text="{Binding Content}"/>
										</Paragraph>
										<Paragraph LineStackingStrategy="MaxHeight">
											<InlineUIContainer>
												<Border Margin="0,0,0,50">
													<Button Foreground="black" BorderBrush="Black" x:Name="UxReadMore" Margin="0,30,0,0" Click="UxReadMore_Click">Læs mere / tilmelding</Button>
												</Border>
											</InlineUIContainer>
										</Paragraph>
									</RichTextBlock>
								</common:RichTextColumns>

								<bm:Map  
                                    Grid.Column="1"  
									VerticalAlignment="Center"
									x:Name="UxMap" 
                                    Loaded="UxMap_OnLoaded"
                                    Height="400" Width="400" 
                                    Credentials="Aj7bCnF-FsIu6wMCPhWhIhIF22uxissR3IteRTuy25VYENbih9oxdbnHILsGhYc7" 
                                    MapType="Road"  ZoomLevel="14">
								</bm:Map>
							</Grid>


							<VisualStateManager.VisualStateGroups>

								<!-- Visual states reflect the application's view state inside the FlipView -->
								<VisualStateGroup x:Name="ApplicationViewStates">
									<VisualState x:Name="FullScreenLandscape"/>
									<VisualState x:Name="Filled"/>

									<!-- Respect the narrower 100-pixel margin convention for portrait -->
									<VisualState x:Name="FullScreenPortrait">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="Margin">
												<DiscreteObjectKeyFrame KeyTime="0" Value="97,0,87,57"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="image" Storyboard.TargetProperty="MaxHeight">
												<DiscreteObjectKeyFrame KeyTime="0" Value="400"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>

									<!-- When snapped, the content is reformatted and scrolls vertically -->
									<VisualState x:Name="Snapped">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextColumns" Storyboard.TargetProperty="Margin">
												<DiscreteObjectKeyFrame KeyTime="0" Value="17,0,17,57"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="scrollViewer" Storyboard.TargetProperty="Style">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource VerticalScrollViewerStyle}"/>
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="richTextBlock" Storyboard.TargetProperty="Width">
												<DiscreteObjectKeyFrame KeyTime="0" Value="280"/>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</ScrollViewer>
					</UserControl>
				</DataTemplate>
			</FlipView.ItemTemplate>
		</FlipView>

		<VisualStateManager.VisualStateGroups>

			<!-- Visual states reflect the application's view state -->
			<VisualStateGroup x:Name="ApplicationViewStates">
				<VisualState x:Name="FullScreenLandscape"/>
				<VisualState x:Name="Filled"/>

				<!-- The back button respects the narrower 100-pixel margin convention for portrait -->
				<VisualState x:Name="FullScreenPortrait">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>

				<!-- The back button and title have different styles when snapped -->
				<VisualState x:Name="Snapped">
					<Storyboard>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
						</ObjectAnimationUsingKeyFrames>
						<ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
							<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
						</ObjectAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
	</Grid>
</common:LayoutAwarePage>
